program : block*
repl_program : block | statement*
block : ( ( IF_KW | WHILE_KW ) expression BLOCK_START block* BLOCK_END [ ELSE_KW BLOCK_START block* BLOCK_END ] | statement | function )
function : DEF_KW NAME LPAREN name_list RPAREN BLOCK_START block BLOCK_END
name_list : NAME { COMMA NAME } | @
statement : ( PRINT_KW | RETURN_KW ) expression SEMICOLON | expression SEMICOLON | SEMICOLON
expression : eql_expr | NAME ASG_OP expression
eql_expr : cmp_expr [ EQL_OP cmp_expr ]
cmp_expr : add_expr [ CMP_OP add_expr ]
add_expr : mul_expr { ADD_OP mul_expr }
mul_expr : unr_expr { MUL_OP unr_expr }
unr_expr : NAME [ LPAREN name_list RPAREN ] | LITERAL | NUMERAL | LPAREN expression RPAREN | ADD_OP unr_expr
